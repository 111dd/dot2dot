{"ast":null,"code":"var _jsxFileName = \"/Users/dordavid/PycharmProjects/dot2dot/frontend/src/contexts/LanguageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport en from './locales/en.json';\nimport he from './locales/he.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const useLanguage = () => {\n  _s();\n  return useContext(LanguageContext);\n};\n_s(useLanguage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s2();\n  const [language, setLanguage] = useState('he');\n  const translations = language === 'en' ? en : he;\n  const toggleLanguage = () => {\n    setLanguage(prev => prev === 'en' ? 'he' : 'en');\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      translations,\n      toggleLanguage,\n      language\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s2(LanguageProvider, \"6w5OqdowqjSbhoHEJ2IORyfvskg=\");\n_c = LanguageProvider;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","en","he","jsxDEV","_jsxDEV","LanguageContext","useLanguage","_s","LanguageProvider","children","_s2","language","setLanguage","translations","toggleLanguage","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dordavid/PycharmProjects/dot2dot/frontend/src/contexts/LanguageContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\nimport en from './locales/en.json';\nimport he from './locales/he.json';\n\nconst LanguageContext = createContext();\n\nexport const useLanguage = () => useContext(LanguageContext);\n\nexport const LanguageProvider = ({ children }) => {\n  const [language, setLanguage] = useState('he');\n  const translations = language === 'en' ? en : he;\n\n  const toggleLanguage = () => {\n    setLanguage((prev) => (prev === 'en' ? 'he' : 'en'));\n  };\n\n  return (\n    <LanguageContext.Provider value={{ translations, toggleLanguage, language }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE,OAAOC,EAAE,MAAM,mBAAmB;AAClC,OAAOC,EAAE,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,eAAe,gBAAGP,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMQ,WAAW,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,eAAe,CAAC;AAAA;AAACE,EAAA,CAAhDD,WAAW;AAExB,OAAO,MAAME,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMc,YAAY,GAAGF,QAAQ,KAAK,IAAI,GAAGV,EAAE,GAAGC,EAAE;EAEhD,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3BF,WAAW,CAAEG,IAAI,IAAMA,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAK,CAAC;EACtD,CAAC;EAED,oBACEX,OAAA,CAACC,eAAe,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEJ,YAAY;MAAEC,cAAc;MAAEH;IAAS,CAAE;IAAAF,QAAA,EACzEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACX,GAAA,CAbWF,gBAAgB;AAAAc,EAAA,GAAhBd,gBAAgB;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}