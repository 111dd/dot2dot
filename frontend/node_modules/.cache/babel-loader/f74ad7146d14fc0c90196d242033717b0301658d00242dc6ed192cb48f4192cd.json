{"ast":null,"code":"var _jsxFileName = \"/Users/dordavid/dot2dot/frontend/src/components/RouterTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useTable, useSortBy, useFilters } from 'react-table';\nimport RouterModal from './RouterModal';\nimport './RouterTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RouterTable = () => {\n  _s();\n  const [routers, setRouters] = useState([]);\n  const [networks, setNetworks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedRouter, setSelectedRouter] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch routers and networks from the server\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const [routersResponse, networksResponse] = await Promise.all([axios.get('http://127.0.0.1:5000/api/routers'), axios.get('http://127.0.0.1:5000/api/networks')]);\n        setRouters(routersResponse.data);\n        setNetworks(networksResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Failed to load data from the server.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const getNetworkDetails = React.useCallback(networkId => {\n    return networks.find(network => network.id === networkId) || {};\n  }, [networks]);\n  const data = React.useMemo(() => routers.map(router => {\n    const {\n      name: networkName,\n      color: networkColor\n    } = getNetworkDetails(router.network_id);\n    return {\n      ...router,\n      networkName: networkName || 'Unknown',\n      networkColor: networkColor || '#FFFFFF'\n    };\n  }), [routers, getNetworkDetails]);\n  const columns = React.useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id'\n  }, {\n    Header: 'Name',\n    accessor: 'name'\n  }, {\n    Header: 'IP Address',\n    accessor: 'ip_address'\n  }, {\n    Header: 'Floor',\n    accessor: 'floor'\n  }, {\n    Header: 'Building',\n    accessor: 'building'\n  }, {\n    Header: 'Network',\n    accessor: 'networkName'\n  }, {\n    Header: 'Actions',\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMoreClick(row.original),\n      children: \"More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this)\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useFilters, useSortBy);\n  const handleMoreClick = router => {\n    setSelectedRouter(router);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setSelectedRouter(null);\n    setIsModalOpen(false);\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/add-router\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Router\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: \"router-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              style: {\n                backgroundColor: row.original.networkColor\n              },\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), isModalOpen && selectedRouter && /*#__PURE__*/_jsxDEV(RouterModal, {\n      router: selectedRouter,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(RouterTable, \"x2LstUpG3g4Z3SynigPJ5EQGOvc=\", false, function () {\n  return [useTable];\n});\n_c = RouterTable;\nexport default RouterTable;\nvar _c;\n$RefreshReg$(_c, \"RouterTable\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useTable","useSortBy","useFilters","RouterModal","jsxDEV","_jsxDEV","RouterTable","_s","routers","setRouters","networks","setNetworks","isModalOpen","setIsModalOpen","selectedRouter","setSelectedRouter","isLoading","setIsLoading","error","setError","fetchData","routersResponse","networksResponse","Promise","all","get","data","console","getNetworkDetails","useCallback","networkId","find","network","id","useMemo","map","router","name","networkName","color","networkColor","network_id","columns","Header","accessor","Cell","row","onClick","handleMoreClick","original","children","fileName","_jsxFileName","lineNumber","columnNumber","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","handleCloseModal","style","marginBottom","to","className","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","backgroundColor","cells","cell","getCellProps","onClose","_c","$RefreshReg$"],"sources":["/Users/dordavid/dot2dot/frontend/src/components/RouterTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useTable, useSortBy, useFilters } from 'react-table';\nimport RouterModal from './RouterModal';\nimport './RouterTable.css';\n\nconst RouterTable = () => {\n  const [routers, setRouters] = useState([]);\n  const [networks, setNetworks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedRouter, setSelectedRouter] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch routers and networks from the server\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const [routersResponse, networksResponse] = await Promise.all([\n          axios.get('http://127.0.0.1:5000/api/routers'),\n          axios.get('http://127.0.0.1:5000/api/networks'),\n        ]);\n\n        setRouters(routersResponse.data);\n        setNetworks(networksResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Failed to load data from the server.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const getNetworkDetails = React.useCallback(\n  (networkId) => {\n    return networks.find((network) => network.id === networkId) || {};\n  },\n  [networks]\n);\n\nconst data = React.useMemo(\n  () =>\n    routers.map((router) => {\n      const { name: networkName, color: networkColor } = getNetworkDetails(router.network_id);\n      return {\n        ...router,\n        networkName: networkName || 'Unknown',\n        networkColor: networkColor || '#FFFFFF',\n      };\n    }),\n  [routers, getNetworkDetails]\n);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'ID',\n        accessor: 'id',\n      },\n      {\n        Header: 'Name',\n        accessor: 'name',\n      },\n      {\n        Header: 'IP Address',\n        accessor: 'ip_address',\n      },\n      {\n        Header: 'Floor',\n        accessor: 'floor',\n      },\n      {\n        Header: 'Building',\n        accessor: 'building',\n      },\n      {\n        Header: 'Network',\n        accessor: 'networkName',\n      },\n      {\n        Header: 'Actions',\n        Cell: ({ row }) => (\n          <button onClick={() => handleMoreClick(row.original)}>More</button>\n        ),\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data }, useFilters, useSortBy);\n\n  const handleMoreClick = (router) => {\n    setSelectedRouter(router);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedRouter(null);\n    setIsModalOpen(false);\n  };\n\n  if (isLoading) return <div>Loading...</div>;\n  if (error) return <div style={{ color: 'red' }}>{error}</div>;\n\n  return (\n    <div>\n      <div style={{ marginBottom: '10px' }}>\n        <Link to=\"/add-router\">\n          <button>Add Router</button>\n        </Link>\n      </div>\n      <div className=\"table-container\">\n        <table {...getTableProps()} className=\"router-table\">\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render('Header')}\n                    <span>\n                      {column.isSorted\n                        ? column.isSortedDesc\n                          ? ' ðŸ”½'\n                          : ' ðŸ”¼'\n                        : ''}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr\n                  {...row.getRowProps()}\n                  style={{ backgroundColor: row.original.networkColor }}\n                >\n                  {row.cells.map((cell) => (\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  ))}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      {isModalOpen && selectedRouter && (\n        <RouterModal router={selectedRouter} onClose={handleCloseModal} />\n      )}\n    </div>\n  );\n};\n\nexport default RouterTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}