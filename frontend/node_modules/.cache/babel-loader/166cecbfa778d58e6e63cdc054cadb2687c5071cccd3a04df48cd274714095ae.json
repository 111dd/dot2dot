{"ast":null,"code":"var _jsxFileName = \"/Users/dordavid/dot2dot/frontend/src/components/NetworkTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Link } from 'react-router-dom'; // לייבוא Link\nimport axios from 'axios';\nimport { useReactTable, getCoreRowModel, getFilteredRowModel, getSortedRowModel, flexRender } from '@tanstack/react-table';\nimport NetworkModal from './NetworkModal';\nimport './NetworkTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkTable = () => {\n  _s();\n  const [networks, setNetworks] = useState([]);\n  const [selectedNetwork, setSelectedNetwork] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [globalFilter, setGlobalFilter] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/networks');\n        setNetworks(response.data);\n      } catch (err) {\n        console.error('Error fetching networks:', err);\n        setError('Failed to load data from the server.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleMoreClick = network => {\n    setSelectedNetwork(network);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setSelectedNetwork(null);\n    setIsModalOpen(false);\n  };\n  const data = useMemo(() => networks, [networks]);\n  const columns = useMemo(() => [{\n    accessorKey: 'id',\n    header: 'ID'\n  }, {\n    accessorKey: 'name',\n    header: 'Name'\n  }, {\n    accessorKey: 'description',\n    header: 'Description'\n  }, {\n    id: 'actions',\n    header: 'Actions',\n    cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"table-button\",\n      onClick: () => handleMoreClick(row.original),\n      children: \"More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)\n  }], []);\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      globalFilter\n    },\n    onGlobalFilterChange: setGlobalFilter,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getSortedRowModel: getSortedRowModel()\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/add-network\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"Add Network\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Global Search...\",\n        value: globalFilter,\n        onChange: e => setGlobalFilter(e.target.value),\n        className: \"global-filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"network-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [flexRender(header.column.columnDef.header, header.getContext()), header.column.getCanFilter() && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: header.column.getFilterValue() || '',\n                onChange: e => header.column.setFilterValue(e.target.value),\n                placeholder: `Filter ${header.column.columnDef.header}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 23\n              }, this)]\n            }, header.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this))\n          }, headerGroup.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: row.original.color || '#FFFFFF'\n            },\n            children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: flexRender(cell.column.columnDef.cell, cell.getContext())\n            }, cell.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this))\n          }, row.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), isModalOpen && selectedNetwork && /*#__PURE__*/_jsxDEV(NetworkModal, {\n      network: selectedNetwork,\n      onClose: handleCloseModal,\n      onDelete: id => {\n        setNetworks(prev => prev.filter(network => network.id !== id));\n        setIsModalOpen(false);\n      },\n      onUpdate: updatedNetwork => {\n        setNetworks(prev => prev.map(network => network.id === updatedNetwork.id ? updatedNetwork : network));\n        setIsModalOpen(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkTable, \"f3AhYMlvSFoTZMWYeeUDVFtbET8=\", false, function () {\n  return [useReactTable];\n});\n_c = NetworkTable;\nexport default NetworkTable;\nvar _c;\n$RefreshReg$(_c, \"NetworkTable\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Link","axios","useReactTable","getCoreRowModel","getFilteredRowModel","getSortedRowModel","flexRender","NetworkModal","jsxDEV","_jsxDEV","NetworkTable","_s","networks","setNetworks","selectedNetwork","setSelectedNetwork","isModalOpen","setIsModalOpen","isLoading","setIsLoading","error","setError","globalFilter","setGlobalFilter","fetchData","response","get","data","err","console","handleMoreClick","network","handleCloseModal","columns","accessorKey","header","id","cell","row","className","onClick","original","children","fileName","_jsxFileName","lineNumber","columnNumber","table","state","onGlobalFilterChange","style","color","to","type","placeholder","value","onChange","e","target","getHeaderGroups","map","headerGroup","headers","column","columnDef","getContext","getCanFilter","getFilterValue","setFilterValue","getRowModel","rows","backgroundColor","getVisibleCells","onClose","onDelete","prev","filter","onUpdate","updatedNetwork","_c","$RefreshReg$"],"sources":["/Users/dordavid/dot2dot/frontend/src/components/NetworkTable.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { Link } from 'react-router-dom'; // לייבוא Link\nimport axios from 'axios';\nimport {\n  useReactTable,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getSortedRowModel,\n  flexRender,\n} from '@tanstack/react-table';\nimport NetworkModal from './NetworkModal';\nimport './NetworkTable.css';\n\nconst NetworkTable = () => {\n  const [networks, setNetworks] = useState([]);\n  const [selectedNetwork, setSelectedNetwork] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [globalFilter, setGlobalFilter] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/networks');\n        setNetworks(response.data);\n      } catch (err) {\n        console.error('Error fetching networks:', err);\n        setError('Failed to load data from the server.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const handleMoreClick = (network) => {\n    setSelectedNetwork(network);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedNetwork(null);\n    setIsModalOpen(false);\n  };\n\n  const data = useMemo(() => networks, [networks]);\n\n  const columns = useMemo(\n    () => [\n      { accessorKey: 'id', header: 'ID' },\n      { accessorKey: 'name', header: 'Name' },\n      { accessorKey: 'description', header: 'Description' },\n      {\n        id: 'actions',\n        header: 'Actions',\n        cell: ({ row }) => (\n          <button\n            className=\"table-button\"\n            onClick={() => handleMoreClick(row.original)}\n          >\n            More\n          </button>\n        ),\n      },\n    ],\n    []\n  );\n\n  const table = useReactTable({\n    data,\n    columns,\n    state: { globalFilter },\n    onGlobalFilterChange: setGlobalFilter,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n  });\n\n  if (isLoading) return <div>Loading...</div>;\n  if (error) return <div style={{ color: 'red' }}>{error}</div>;\n\n  return (\n    <div>\n      <div className=\"controls-container\">\n        {/* עדכון הכפתור לניווט לדף AddNetworkPage */}\n        <Link to=\"/add-network\">\n          <button className=\"add-button\">Add Network</button>\n        </Link>\n        <input\n          type=\"text\"\n          placeholder=\"Global Search...\"\n          value={globalFilter}\n          onChange={(e) => setGlobalFilter(e.target.value)}\n          className=\"global-filter\"\n        />\n      </div>\n      <div className=\"table-container\">\n        <table className=\"network-table\">\n          <thead>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <tr key={headerGroup.id}>\n                {headerGroup.headers.map((header) => (\n                  <th key={header.id}>\n                    {flexRender(header.column.columnDef.header, header.getContext())}\n                    {header.column.getCanFilter() && (\n                      <input\n                        type=\"text\"\n                        value={header.column.getFilterValue() || ''}\n                        onChange={(e) => header.column.setFilterValue(e.target.value)}\n                        placeholder={`Filter ${header.column.columnDef.header}`}\n                      />\n                    )}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {table.getRowModel().rows.map((row) => (\n              <tr key={row.id} style={{ backgroundColor: row.original.color || '#FFFFFF' }}>\n                {row.getVisibleCells().map((cell) => (\n                  <td key={cell.id}>\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {isModalOpen && selectedNetwork && (\n        <NetworkModal\n          network={selectedNetwork}\n          onClose={handleCloseModal}\n          onDelete={(id) => {\n            setNetworks((prev) => prev.filter((network) => network.id !== id));\n            setIsModalOpen(false);\n          }}\n          onUpdate={(updatedNetwork) => {\n            setNetworks((prev) =>\n              prev.map((network) =>\n                network.id === updatedNetwork.id ? updatedNetwork : network\n              )\n            );\n            setIsModalOpen(false);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NetworkTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}