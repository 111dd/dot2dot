{"ast":null,"code":"var _jsxFileName = \"/Users/dordavid/dot2dot/frontend/src/components/RouterTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useTable, useSortBy } from 'react-table';\nimport RouterModal from './RouterModal';\nimport './RouterTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RouterTable = () => {\n  _s();\n  const [routers, setRouters] = useState([]);\n  const [networks, setNetworks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedRouter, setSelectedRouter] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const [routersResponse, networksResponse] = await Promise.all([axios.get('http://127.0.0.1:5000/api/routers'), axios.get('http://127.0.0.1:5000/api/networks')]);\n        setRouters(routersResponse.data);\n        setNetworks(networksResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Failed to load data from the server.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const data = React.useMemo(() => {\n    return routers.map(router => {\n      const {\n        name: networkName,\n        color: networkColor\n      } = getNetworkDetails(router.network_id);\n      return {\n        ...router,\n        networkName: networkName || 'Unknown',\n        networkColor: networkColor || '#FFFFFF'\n      };\n    });\n  }, [routers, networks, getNetworkDetails]);\n  const columns = React.useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id'\n  }, {\n    Header: 'Name',\n    accessor: 'name'\n  }, {\n    Header: 'IP Address',\n    accessor: 'ip_address'\n  }, {\n    Header: 'Floor',\n    accessor: 'floor'\n  }, {\n    Header: 'Building',\n    accessor: 'building'\n  }, {\n    Header: 'Network',\n    accessor: 'networkName'\n  }, {\n    Header: 'Actions',\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMoreClick(row.original),\n      children: \"More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n  const handleMoreClick = router => {\n    setSelectedRouter(router);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setSelectedRouter(null);\n    setIsModalOpen(false);\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalOpen(true),\n        children: \"Add Router\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: \"router-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              style: {\n                backgroundColor: row.original.networkColor\n              },\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), isModalOpen && selectedRouter && /*#__PURE__*/_jsxDEV(RouterModal, {\n      router: selectedRouter,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(RouterTable, \"4y2x9DGPb2KQGGlP2VYlAveR4rg=\", false, function () {\n  return [useTable];\n});\n_c = RouterTable;\nexport default RouterTable;\nvar _c;\n$RefreshReg$(_c, \"RouterTable\");","map":{"version":3,"names":["React","useEffect","useState","axios","useTable","useSortBy","RouterModal","jsxDEV","_jsxDEV","RouterTable","_s","routers","setRouters","networks","setNetworks","isModalOpen","setIsModalOpen","selectedRouter","setSelectedRouter","isLoading","setIsLoading","error","setError","fetchData","routersResponse","networksResponse","Promise","all","get","data","console","useMemo","map","router","name","networkName","color","networkColor","getNetworkDetails","network_id","columns","Header","accessor","Cell","row","onClick","handleMoreClick","original","children","fileName","_jsxFileName","lineNumber","columnNumber","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","handleCloseModal","style","marginBottom","className","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","backgroundColor","cells","cell","getCellProps","onClose","_c","$RefreshReg$"],"sources":["/Users/dordavid/dot2dot/frontend/src/components/RouterTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useTable, useSortBy } from 'react-table';\nimport RouterModal from './RouterModal';\nimport './RouterTable.css';\n\nconst RouterTable = () => {\n  const [routers, setRouters] = useState([]);\n  const [networks, setNetworks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedRouter, setSelectedRouter] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const [routersResponse, networksResponse] = await Promise.all([\n          axios.get('http://127.0.0.1:5000/api/routers'),\n          axios.get('http://127.0.0.1:5000/api/networks'),\n        ]);\n\n        setRouters(routersResponse.data);\n        setNetworks(networksResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Failed to load data from the server.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\nconst data = React.useMemo(() => {\n  return routers.map((router) => {\n    const { name: networkName, color: networkColor } = getNetworkDetails(router.network_id);\n    return {\n      ...router,\n      networkName: networkName || 'Unknown',\n      networkColor: networkColor || '#FFFFFF',\n    };\n  });\n}, [routers, networks, getNetworkDetails]);\n\n\n  const columns = React.useMemo(() => [\n    {\n      Header: 'ID',\n      accessor: 'id',\n    },\n    {\n      Header: 'Name',\n      accessor: 'name',\n    },\n    {\n      Header: 'IP Address',\n      accessor: 'ip_address',\n    },\n    {\n      Header: 'Floor',\n      accessor: 'floor',\n    },\n    {\n      Header: 'Building',\n      accessor: 'building',\n    },\n    {\n      Header: 'Network',\n      accessor: 'networkName',\n    },\n    {\n      Header: 'Actions',\n      Cell: ({ row }) => (\n        <button onClick={() => handleMoreClick(row.original)}>More</button>\n      ),\n    },\n  ], []);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data }, useSortBy);\n\n  const handleMoreClick = (router) => {\n    setSelectedRouter(router);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedRouter(null);\n    setIsModalOpen(false);\n  };\n\n  if (isLoading) return <div>Loading...</div>;\n  if (error) return <div style={{ color: 'red' }}>{error}</div>;\n\n  return (\n    <div>\n      <div style={{ marginBottom: '10px' }}>\n        <button onClick={() => setIsModalOpen(true)}>Add Router</button>\n      </div>\n      <div className=\"table-container\">\n        <table {...getTableProps()} className=\"router-table\">\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render('Header')}\n                    <span>\n                      {column.isSorted\n                        ? column.isSortedDesc\n                          ? ' ðŸ”½'\n                          : ' ðŸ”¼'\n                        : ''}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr\n                  {...row.getRowProps()}\n                  style={{ backgroundColor: row.original.networkColor }}\n                >\n                  {row.cells.map((cell) => (\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  ))}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      {isModalOpen && selectedRouter && (\n        <RouterModal router={selectedRouter} onClose={handleCloseModal} />\n      )}\n    </div>\n  );\n};\n\nexport default RouterTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}