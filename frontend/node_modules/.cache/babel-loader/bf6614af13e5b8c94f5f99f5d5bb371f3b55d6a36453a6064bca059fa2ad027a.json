{"ast":null,"code":"var _jsxFileName = \"/Users/dordavid/dot2dot/frontend/src/pages/NetworksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworksPage = () => {\n  _s();\n  const [networks, setNetworks] = useState([]);\n  //  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    axios.get('http://127.0.0.1:5000/api/networks').then(response => {\n      setNetworks(response.data);\n      setIsLoading(false);\n    }).catch(error => {\n      const errorMessage = error.response ? error.response.data.error || error.response.statusText : 'Failed to connect to the server.';\n      console.error('Error fetching networks:', errorMessage);\n      setError(errorMessage);\n      setIsLoading(false);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Networks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), networks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No networks found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: networks.map(network => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [network.name, \" (Created At: \", formatDate(network.created_at), \")\"]\n      }, network.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworksPage, \"8LMhzkuPgpEVAhhbeN8Lr0GYo+g=\");\n_c = NetworksPage;\nexport default NetworksPage;\nvar _c;\n$RefreshReg$(_c, \"NetworksPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","NetworksPage","_s","networks","setNetworks","error","setError","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","setIsLoading","get","then","response","data","catch","errorMessage","statusText","console","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","network","name","created_at","id","_c","$RefreshReg$"],"sources":["/Users/dordavid/dot2dot/frontend/src/pages/NetworksPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst NetworksPage = () => {\n  const [networks, setNetworks] = useState([]);\n//  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const formatDate = (dateString) => {\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    axios.get('http://127.0.0.1:5000/api/networks')\n      .then(response => {\n        setNetworks(response.data);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        const errorMessage = error.response\n          ? error.response.data.error || error.response.statusText\n          : 'Failed to connect to the server.';\n        console.error('Error fetching networks:', errorMessage);\n        setError(errorMessage);\n        setIsLoading(false);\n      });\n  }, []);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Networks</h1>\n      {networks.length === 0 ? (\n        <p>No networks found.</p>\n      ) : (\n        <ul>\n          {networks.map(network => (\n            <li key={network.id}>\n              {network.name} (Created At: {formatDate(network.created_at)})\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default NetworksPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}